@import "./constants";
@import "./typography";

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin centerPos {
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
}

@mixin centerPosX {
  left: 50%;
  transform: translate3d(-50%, 0, 0);
}

@mixin centerPosY {
  top: 50%;
  transform: translate3d(0, -50%, 0) join($restProperties, (), space);
}

@mixin hover {
  :global(.desktop) & {
    &:hover {
      cursor: pointer;
      @content;
    }
  }

  :global(.mobile) & {
    &:active {
      @content;
    }
  }
}

@mixin animate($properties, $transitionTime: 0.2) {
  $resultElements: ();

  @each $property in $properties {
    $resultElements: append(
        $resultElements,
        $property #{$transitionTime}s ease
    );
  }

  transition: join($resultElements, (), comma);
}

@mixin forMaxWidthPhoneS {
  @media screen and (max-width: #{$maxWidthPhoneS}) {
    @content;
  }
}

@mixin forMaxWidthPhoneL {
  @media screen and (max-width: #{$maxWidthPhoneL}) {
    @content;
  }
}

@mixin forMaxWidthTabletM {
  @media screen and (max-width: #{$maxWidthTabletM}) {
    @content;
  }
}

@mixin forMaxWidthDesktopS {
  @media screen and (max-width: #{$maxWidthDesktopS}) {
    @content;
  }
}

@mixin forMinWidthDesktopM {
  @media screen and (min-width: #{$minWidthDesktopM}) {
    @content;
  }
}

@mixin adaptiveRule(
  $rule,
  $maxWidthPhoneS,
  $maxWidthPhoneL,
  $maxWidthTabletM,
  $maxWidthDesktopS,
  $minWidthDesktopM
) {
  @include forMinWidthDesktopM {
    #{$rule}: $minWidthDesktopM;
  }

  @include forMaxWidthDesktopS {
    #{$rule}: $maxWidthDesktopS;
  }

  @include forMaxWidthTabletM {
    #{$rule}: $maxWidthTabletM;
  }

  @include forMaxWidthPhoneL {
    #{$rule}: $maxWidthPhoneL;
  }

  @include forMaxWidthPhoneS {
    #{$rule}: $maxWidthPhoneS;
  }
}
